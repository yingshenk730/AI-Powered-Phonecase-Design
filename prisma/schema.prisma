

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

enum PhoneModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
}

enum CaseMaterial {
  silicone
  polycarbonate
}

enum CaseFinish {
  smooth
  textured
}

enum CaseColor {
  black
  blue
  rose
}

model Configure{
  id String @id @default(cuid())
  width Int
  height Int
  imageUrl String
  color CaseColor?
  model PhoneModel?
  material CaseMaterial?
  finish CaseFinish?
  croppedImageUrl String?
  Order Order []
}

model User {
  id String @id @default(cuid())
  email String @unique
  name String?
  password String?
  image String?
  emailVerified DateTime?
  accounts Account[]
  Order Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  
  type               String
  provider           String
  providerAccountId  String 
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Order {
  id              String        @id @default(cuid())
  configurationId String
  configuration   Configure     @relation(fields: [configurationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  isPaid          Boolean      @default(false)
  status          OrderStatus @default(awaiting_shipment)
  shippingAddress ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  billingAddress BillingAddress? @relation(fields: [billingAddressId], references: [id])
  billingAddressId String?

  createdAt DateTime @default(now())
  updated   DateTime @updatedAt
}

model ShippingAddress{
  id String @id @default(cuid())
  name String
  street String
  city String
  postalCode String
  state String?
  phoneNumber String?
  Order Order[]
}

model BillingAddress{
  id String @id @default(cuid())
  name String
  street String
  city String
  postalCode String
  state String?
  phoneNumber String?
  Order Order[]
}
